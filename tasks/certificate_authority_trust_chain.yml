- name: Variable fallback
  set_fact:
    certificate_authority_cert_format: "{{ hostvars[groups['certificate_authority'][0]]['certificate_authority_cert_format'] }}"

- name: Create temporary directory to hold key on host
  when: ansible_os_family == "Archlinux"
  ansible.builtin.tempfile:
    state: directory
    suffix: key
  register: temp_key_path

- name: Copy certificate to host - Arch Linux
  become: true
  when: ansible_os_family == "Archlinux"
  ansible.builtin.copy:
    src: "{{ ansible_working_path }}/ca-chain.cert.{{ certificate_authority_cert_format }}"
    dest: "{{ temp_key_path.path }}/ca-chain.cert.{{ certificate_authority_cert_format }}"

- name: Run trust agent
  become: true
  when: ansible_os_family == "Archlinux"
  ansible.builtin.shell: >-
    trust anchor --store {{ temp_key_path.path }}/ca-chain.cert.{{ certificate_authority_cert_format }}

- name: Cleanup the temporary file
  become: true
  when:
    - ansible_os_family == "Archlinux"
    - temp_key_path.path is defined
  ansible.builtin.file:
    path: "{{ temp_key_path.path }}"
    state: absent


- name: Ensure cert path exists
  become: true
  when: ansible_os_family == "Debian"
  file:
    path: /usr/local/share/certificates
    state: directory

- name: Copy certificate to host - Debian / Ubuntu Linux
  become: true
  when: ansible_os_family == "Debian"
  ansible.builtin.copy:
    src: "{{ ansible_working_path }}/ca-chain.cert.{{ certificate_authority_cert_format }}"
    dest: "/usr/local/share/certificates/{{ ansible_project_name }}-ca-chain.crt"

- name: Run trust agent
  become: true
  when: ansible_os_family == "Debian"
  ansible.builtin.shell: >-
    update-ca-certificates
