- set_fact:
    domain: "{{ jenkins_domain | default(jenkins_reference + '.' + fqcdn) }}"

- name: Create Nginx rule
  import_tasks: tasks/nginx_reverse_proxy.yml
  vars:
    reference: "{{ role_name }}"
    app_port: "{{ jenkins_port }}"
    letsencrypt: "{{ nginx_facade_use_certbot }}"
    proxy_location_rules: |
      proxy_request_buffering off;
      proxy_buffering off;

- name: Add Jenkins apt repository key.
  become: true
  ansible.builtin.get_url:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    dest: /usr/share/keyrings/jenkins.asc
    mode: '0644'
    force: true

- name: Add Jenkins Stable repository
  become: true
  ansible.builtin.apt_repository:
    repo: >-
      deb
      [signed-by=/usr/share/keyrings/jenkins.asc]
      https://pkg.jenkins.io/debian-stable binary/
    state: present

- name: Make sure Java installed before trying Jenkins
  become: True
  apt:
    update_cache: yes
    name: "{{ jenkins_debian_java_package }}"

- name: Install Jenkins
  become: true
  ansible.builtin.apt:
    name: jenkins

- name: Add jenkins to the docker group
  when: "'docker' in group_names"
  become: True
  user:
    name: jenkins
    append: true
    groups: docker

- name: Enable Jenkins Service
  become: True
  ansible.builtin.systemd:
    name: jenkins
    state: started
    enabled: yes

- name: Create folder for Docker config
  become: true
  when: "'docker' in group_names"
  file:
    path: "{{ jenkins_home }}/.docker"
    owner: jenkins
    group: jenkins
    state: directory
    mode: "0760"

- name: Copy across the initial docker config telling it to use pass as credential store
  become: true
  when: "'docker' in group_names"
  ansible.builtin.copy:
    src: "docker-config.json"
    dest: "{{ jenkins_home }}/.docker/config.json"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user_group }}"

- name: Check whether GPG keyring has been setup
  become: True
  ansible.builtin.shell: >
    sudo -u jenkins gpg --list-keys | grep -q jenkins-ansible; echo $?
  register: GPG_KEY_SETUP

- name: Create a GPG keyring ansible use
  when: GPG_KEY_SETUP.stdout == "1"
  become: true
  ansible.builtin.shell: >
    sudo -u jenkins gpg --batch --passphrase '' --quick-gen-key jenkins-ansible default default

- name: Initiate pass to ansible
  when: GPG_KEY_SETUP.stdout == "1"
  become: true
  ansible.builtin.shell: >
    sudo -u jenkins pass init jenkins-ansible

- name: Write setup Groovy script to Jenkins path for init
  become: true
  ansible.builtin.template:
    src: init.groovy.j2
    dest: "{{ jenkins_home }}/init.groovy"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user_group }}"
    mode: "0600"

- name: Restart Jenkins Service to run the initial setup script
  become: True
  ansible.builtin.systemd:
    name: jenkins
    state: restarted

- name: Remove the initialisation script now run
  become: true
  ansible.builtin.file:
    path: "{{ jenkins_home }}/init.groovy"
    state: absent

- name: Restart Jenkins to make sure everything is clean
  become: True
  ansible.builtin.systemd:
    name: jenkins
    state: restarted




